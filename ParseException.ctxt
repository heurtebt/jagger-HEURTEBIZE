#BlueJ class context
comment0.target=ParseException
comment0.text=\n\ This\ exception\ is\ thrown\ when\ parse\ errors\ are\ encountered.\n\ You\ can\ explicitly\ create\ objects\ of\ this\ exception\ type\ by\n\ calling\ the\ method\ generateParseException\ in\ the\ generated\n\ parser.\n\n\ You\ can\ modify\ this\ class\ to\ customize\ your\ error\ reporting\n\ mechanisms\ so\ long\ as\ you\ retain\ the\ public\ fields.\n
comment1.params=currentTokenVal\ expectedTokenSequencesVal\ tokenImageVal
comment1.target=ParseException(Token,\ int[][],\ java.lang.String[])
comment1.text=\n\ This\ constructor\ is\ used\ by\ the\ method\ "generateParseException"\n\ in\ the\ generated\ parser.\ \ Calling\ this\ constructor\ generates\n\ a\ new\ object\ of\ this\ type\ with\ the\ fields\ "currentToken",\n\ "expectedTokenSequences",\ and\ "tokenImage"\ set.\n
comment2.params=
comment2.target=ParseException()
comment2.text=\n\ The\ following\ constructors\ are\ for\ use\ by\ you\ for\ whatever\n\ purpose\ you\ can\ think\ of.\ \ Constructing\ the\ exception\ in\ this\n\ manner\ makes\ the\ exception\ behave\ in\ the\ normal\ way\ -\ i.e.,\ as\n\ documented\ in\ the\ class\ "Throwable".\ \ The\ fields\ "errorToken",\n\ "expectedTokenSequences",\ and\ "tokenImage"\ do\ not\ contain\n\ relevant\ information.\ \ The\ JavaCC\ generated\ code\ does\ not\ use\n\ these\ constructors.\n
comment3.params=message
comment3.target=ParseException(java.lang.String)
comment3.text=Constructor\ with\ message.
comment4.params=currentToken\ expectedTokenSequences\ tokenImage
comment4.target=java.lang.String\ initialise(Token,\ int[][],\ java.lang.String[])
comment4.text=\n\ It\ uses\ "currentToken"\ and\ "expectedTokenSequences"\ to\ generate\ a\ parse\n\ error\ message\ and\ returns\ it.\ \ If\ this\ object\ has\ been\ created\n\ due\ to\ a\ parse\ error,\ and\ you\ do\ not\ catch\ it\ (it\ gets\ thrown\n\ from\ the\ parser)\ the\ correct\ error\ message\n\ gets\ displayed.\n
comment5.params=str
comment5.target=java.lang.String\ add_escapes(java.lang.String)
comment5.text=\n\ Used\ to\ convert\ raw\ characters\ to\ their\ escaped\ version\n\ when\ these\ raw\ version\ cannot\ be\ used\ as\ part\ of\ an\ ASCII\n\ string\ literal.\n
numComments=6
